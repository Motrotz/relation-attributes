<?php

namespace RelationAttributes\Attributes;

use Attribute;
use Illuminate\Support\Str;
use RelationAttributes\Contracts\RelationAttribute;
use RelationAttributes\Traits\HasCommonFilters;
use RelationAttributes\Traits\HasPivotFilters;

#[Attribute(Attribute::TARGET_CLASS | Attribute::IS_REPEATABLE)]
class BelongsToMany implements RelationAttribute
{
    use HasCommonFilters;
    use HasPivotFilters;

    public function __construct(
        public string $related,
        public ?string $relation = null,
        public ?string $pivotAs = null,
        public ?string $table = null,
        public ?string $foreignPivotKey = null,
        public ?string $relatedPivotKey = null,
        public ?string $parentKey = null,
        public ?string $relatedKey = null,

        // Common filters
        array $where = [],
        array $whereIn = [],
        array $whereNull = [],
        array $whereNotNull = [],
        array $orderBy = [],
        ?int $limit = null,
        ?int $offset = null,
        ?array $select = null,
        bool $distinct = false,
        array $with = [],
        array $whereHas = [],
        array $whereDate = [],
        array $whereBetween = [],

        // Pivot configuration
        array $pivotColumns = [],
        bool $timestamps = false,
        ?string $pivotClass = null,

        // Pivot filtering
        array $wherePivot = [],
        array $wherePivotIn = [],
        array $wherePivotNull = [],
        array $wherePivotNotNull = [],

        // Pivot defaults
        array $withPivotValues = [],

        // Pivot ordering
        array $orderByPivot = [],
    ) {
        // Auto-generate relation name (pluralized)
        $this->relation ??= Str::of($this->related)
            ->classBasename()
            ->plural()
            ->camel();

        // Default pivot accessor name
        $this->pivotAs ??= 'pivot';

        // Table name will be auto-generated by Laravel if not provided
        // Laravel uses alphabetically sorted snake_case singular model names

        // Initialize common filter properties
        $this->where = $where;
        $this->whereIn = $whereIn;
        $this->whereNull = $whereNull;
        $this->whereNotNull = $whereNotNull;
        $this->orderBy = $orderBy;
        $this->limit = $limit;
        $this->offset = $offset;
        $this->select = $select;
        $this->distinct = $distinct;
        $this->with = $with;
        $this->whereHas = $whereHas;
        $this->whereDate = $whereDate;
        $this->whereBetween = $whereBetween;

        // Initialize pivot properties
        $this->pivotColumns = $pivotColumns;
        $this->timestamps = $timestamps;
        $this->pivotClass = $pivotClass;
        $this->wherePivot = $wherePivot;
        $this->wherePivotIn = $wherePivotIn;
        $this->wherePivotNull = $wherePivotNull;
        $this->wherePivotNotNull = $wherePivotNotNull;
        $this->withPivotValues = $withPivotValues;
        $this->orderByPivot = $orderByPivot;
    }
}